<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vosung.authapp.employee.mapper.TAuEmployeeCardMapper" >
  <resultMap id="BaseResultMap" type="com.vosung.auapi.client.entity.TAuEmployeeCard" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="CHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, employee_id, country, bank_of_deposit, bank_account, account_name, currency, 
    is_default, summary
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_AU_EMPLOYEE_CARD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_AU_EMPLOYEE_CARD
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_AU_EMPLOYEE_CARD
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCardExample" >
    delete from T_AU_EMPLOYEE_CARD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCard" >
    insert into T_AU_EMPLOYEE_CARD (id, employee_id, country, 
      bank_of_deposit, bank_account, account_name, 
      currency, is_default, summary
      )
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, 
      #{bankOfDeposit,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{currency,jdbcType=VARCHAR}, #{isDefault,jdbcType=CHAR}, #{summary,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCard" >
    insert into T_AU_EMPLOYEE_CARD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="summary != null" >
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="bankOfDeposit != null" >
        #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCardExample" resultType="java.lang.Integer" >
    select count(*) from T_AU_EMPLOYEE_CARD
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_AU_EMPLOYEE_CARD
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.bankOfDeposit != null" >
        bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=CHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_AU_EMPLOYEE_CARD
    set id = #{record.id,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=CHAR},
      summary = #{record.summary,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCard" >
    update T_AU_EMPLOYEE_CARD
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=CHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vosung.auapi.client.entity.TAuEmployeeCard" >
    update T_AU_EMPLOYEE_CARD
    set employee_id = #{employeeId,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      summary = #{summary,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>